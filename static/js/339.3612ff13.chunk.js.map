{"version":3,"file":"static/js/339.3612ff13.chunk.js","mappings":"sMAAO,IAAMA,EAAmB,sCACnBC,EACX,mF,uLCFIC,EAAU,gCACVC,EAAS,mCAAf,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACcC,IAItC,SAASY,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,gCACOC,EADP,kBACuBa,IAI/C,SAASC,EAAkBC,GAChC,OAAOd,EAAuB,GAAD,OAAIF,EAAJ,iBAAoBgB,EAApB,oBAAkCf,IAG1D,SAASgB,EAAkBD,GAChC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,iBACRgB,EADQ,4BACcf,IAItC,SAASiB,EAAmBF,GACjC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACPgB,EADO,4BACef,M,gIC7B/B,SAASkB,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA6BN,GAASO,KAAKH,KAC1C,CAACJ,KAEG,8BAAGG,IAAW,SAAC,EAAAK,YAAD,CAAaC,KAAMN,EAAQM,W,uFCXrCC,E,QAAiBC,GAAAA,IAAH,wD,sGCCdH,EAAc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5B,OACE,wBACGA,EAAKG,KAAI,SAAAC,GACR,IAAQjB,EAA+CiB,EAA/CjB,GAAIkB,EAA2CD,EAA3CC,aAAcC,EAA6BF,EAA7BE,cAAeC,EAAcH,EAAdG,UACzC,OACE,2BACE,SAAC,EAAAN,eAAD,CACEO,IACmB,OAAjBH,EAAA,UACOpC,EAAAA,GADP,OAC0BoC,GACtBnC,EAAAA,EAENuC,IAAKH,KAEP,uBAAIA,KACJ,wCAAgBC,OAVTpB","sources":["constatnts/urlPicture.js","services/themoviedb-api.js","views/Cast.jsx","views/CastElement/Cast.styled.js","views/CastElement/CastElement.jsx"],"sourcesContent":["export const BASE_URL_PICTURE = 'https://image.tmdb.org/t/p/original';\nexport const DEFAUL_FOTO =\n  'https://vyshnevyi-partners.com/wp-content/uploads/2016/12/no-avatar-300x300.png';\n","const BASEURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = '606cb073ea160aeac28dec084af576e2';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchWithErrorHandling(\n    `${BASEURL}trending/movie/week?api_key=${APIKEY}`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASEURL}search/movie?api_key=${APIKEY}&query=${query}`\n  );\n}\n\nexport function fetchMovieDetails(id) {\n  return fetchWithErrorHandling(`${BASEURL}movie/${id}?api_key=${APIKEY}`);\n}\n\nexport function fetchMovieCredits(id) {\n  return fetchWithErrorHandling(\n    `${BASEURL}movie/${id}/credits?api_key=${APIKEY}`\n  );\n}\n\nexport function fetchMoviesReviews(id) {\n  return fetchWithErrorHandling(\n    `${BASEURL}/movie/${id}/reviews?api_key=${APIKEY}`\n  );\n}\n","import { useState, useEffect } from 'react';\nimport * as moviedbAPI from '../services/themoviedb-api';\nimport { useParams } from 'react-router-dom';\nimport { CastElement } from './CastElement/CastElement';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState(null);\n\n  useEffect(() => {\n    moviedbAPI.fetchMovieCredits(movieId).then(setCredits);\n  }, [movieId]);\n\n  return <>{credits && <CastElement cast={credits.cast} />}</>;\n}\n","import styled from 'styled-components';\n\nexport const CreditsPicture = styled.img`\n  height: 10%;\n  width: 10%;\n`;\n","import { BASE_URL_PICTURE, DEFAUL_FOTO } from 'constatnts/urlPicture';\nimport { CreditsPicture } from './Cast.styled';\n\nexport const CastElement = ({ cast }) => {\n  return (\n    <ul>\n      {cast.map(el => {\n        const { id, profile_path, original_name, character } = el;\n        return (\n          <li key={id}>\n            <CreditsPicture\n              src={\n                profile_path !== null\n                  ? `${BASE_URL_PICTURE}${profile_path}`\n                  : DEFAUL_FOTO\n              }\n              alt={original_name}\n            />\n            <p>{original_name}</p>\n            <p> Character: {character}</p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n"],"names":["BASE_URL_PICTURE","DEFAUL_FOTO","BASEURL","APIKEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchSearchMovies","query","fetchMovieDetails","id","fetchMovieCredits","fetchMoviesReviews","Cast","movieId","useParams","useState","credits","setCredits","useEffect","moviedbAPI","then","CastElement","cast","CreditsPicture","styled","map","el","profile_path","original_name","character","src","alt"],"sourceRoot":""}