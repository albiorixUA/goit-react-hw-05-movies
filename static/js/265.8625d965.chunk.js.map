{"version":3,"file":"static/js/265.8625d965.chunk.js","mappings":"iMAEaA,E,QAAUC,GAAAA,GAAH,8S,SCAL,SAASC,EAAT,GAAoC,IAAbC,EAAY,EAAZA,SACpC,OAAO,SAACH,EAAD,UAAUG,M,4ECHZ,IAAMC,EAAmB,sCACnBC,EACX,mF,uLCFIC,EAAU,gCACVC,EAAS,mCAAf,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBF,EADwB,uCACcC,IAItC,SAASY,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,gCACOC,EADP,kBACuBa,IAI/C,SAASC,EAAkBC,GAChC,OAAOd,EAAuB,GAAD,OAAIF,EAAJ,iBAAoBgB,EAApB,oBAAkCf,IAG1D,SAASgB,EAAkBD,GAChC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,iBACRgB,EADQ,4BACcf,IAItC,SAASiB,EAAmBF,GACjC,OAAOd,EAAuB,GAAD,OACxBF,EADwB,kBACPgB,EADO,4BACef,M,2GC9B/B,SAASkB,EAAT,GAAkD,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC3CC,EAAwDF,EAAxDE,eAAgBC,EAAwCH,EAAxCG,YAAaC,EAA2BJ,EAA3BI,SAAUC,EAAiBL,EAAjBK,aAC/C,OACE,iCACE,mBAAQC,KAAK,SAASL,QAASA,EAA/B,sBAGA,SAAC,IAAD,oBAAiBC,MACjB,UAAC,EAAAK,QAAD,YACE,gBAAKC,IAAG,UAAK9B,EAAAA,GAAL,OAAwByB,GAAeM,IAAKP,KACpD,UAAC,EAAAQ,cAAD,YACE,sCACA,uBAAIN,KACJ,kCACA,uBAAIC,KACJ,oCACA,uBAAIL,EAAMW,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,gBAAiBA,EAAjB,qB,gIClBlBN,EAAUhC,EAAAA,GAAAA,IAAH,6QAUPmC,EAAgBnC,EAAAA,GAAAA,IAAH,+C,iOCNX,SAASuC,IACtB,OAA0CC,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA6BL,GAASM,KAAKP,KAC1C,CAACC,KAGF,gCACGF,IACC,6BAEI,SAAC,UAAD,CACEf,QAAS,kBAAMmB,EAAS,MACxBpB,MAAOgB,KAGX,mDACA,SAAC,KAAD,CAAMS,GAAG,OAAT,mBACA,mBACA,SAAC,KAAD,CAAMA,GAAG,UAAT,yBAGJ,SAAC,KAAD","sources":["components/PageHeading/PageHeading.styled.js","components/PageHeading/PageHeading.jsx","constatnts/urlPicture.js","services/themoviedb-api.js","views/MovieDetailsElement/MovieDetailsElement.jsx","views/MovieDetailsElement/MovieDetailsElement.styled.js","views/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Heading = styled.h1`\n  padding: 8px;\n  margin-top: 10px;\n  border-radius: 8px;\n  color: #fff;\n  font-size: 40px;\n  font-weight: 500;\n  text-align: center;\n  background-image: repeating-linear-gradient(\n    -45deg,\n    #606dbc,\n    #606dbc 15px,\n    #465298 15px,\n    #465298 30px\n  );\n`;\n","import { Heading } from './PageHeading.styled';\n\nexport default function PageHeading({ children }) {\n  return <Heading>{children}</Heading>;\n}\n","export const BASE_URL_PICTURE = 'https://image.tmdb.org/t/p/original';\nexport const DEFAUL_FOTO =\n  'https://vyshnevyi-partners.com/wp-content/uploads/2016/12/no-avatar-300x300.png';\n","const BASEURL = 'https://api.themoviedb.org/3/';\nconst APIKEY = '606cb073ea160aeac28dec084af576e2';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n  return fetchWithErrorHandling(\n    `${BASEURL}trending/movie/week?api_key=${APIKEY}`\n  );\n}\n\nexport function fetchSearchMovies(query) {\n  return fetchWithErrorHandling(\n    `${BASEURL}search/movie?api_key=${APIKEY}&query=${query}`\n  );\n}\n\nexport function fetchMovieDetails(id) {\n  return fetchWithErrorHandling(`${BASEURL}movie/${id}?api_key=${APIKEY}`);\n}\n\nexport function fetchMovieCredits(id) {\n  return fetchWithErrorHandling(\n    `${BASEURL}movie/${id}/credits?api_key=${APIKEY}`\n  );\n}\n\nexport function fetchMoviesReviews(id) {\n  return fetchWithErrorHandling(\n    `${BASEURL}/movie/${id}/reviews?api_key=${APIKEY}`\n  );\n}\n","import PageHeading from 'components/PageHeading';\nimport { Section, InfoContainer } from './MovieDetailsElement.styled';\nimport { BASE_URL_PICTURE } from 'constatnts/urlPicture';\n\nexport default function MovieDetailsElement({ movie, onClick }) {\n  const { original_title, poster_path, overview, vote_average } = movie;\n  return (\n    <>\n      <button type=\"button\" onClick={onClick}>\n        Go back\n      </button>\n      <PageHeading>{`${original_title}`}</PageHeading>\n      <Section>\n        <img src={`${BASE_URL_PICTURE}${poster_path}`} alt={original_title} />\n        <InfoContainer>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Vote</h3>\n          <p>{vote_average}</p>\n          <h3>Genres</h3>\n          <p>{movie.genres.map(({ name }) => `${name} `)}</p>\n        </InfoContainer>\n      </Section>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Section = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 10px;\n  background-color: #fff;\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-left: 10px;\n`;\n","import { useState, useEffect } from 'react';\nimport { Link, useNavigate, Outlet } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport * as moviedbAPI from '../services/themoviedb-api';\nimport MovieDetailsElement from './MovieDetailsElement';\n\nexport default function MovieDetailsPage() {\n  const [detailsMovies, setDetailsMovies] = useState(null);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    moviedbAPI.fetchMovieDetails(movieId).then(setDetailsMovies);\n  }, [movieId]);\n\n  return (\n    <>\n      {detailsMovies && (\n        <main>\n          {\n            <MovieDetailsElement\n              onClick={() => navigate('/')}\n              movie={detailsMovies}\n            />\n          }\n          <p>Additional information</p>\n          <Link to=\"cast\">Cast</Link>\n          <br />\n          <Link to=\"reviews\">Reviews</Link>\n        </main>\n      )}\n      <Outlet />\n    </>\n  );\n}\n"],"names":["Heading","styled","PageHeading","children","BASE_URL_PICTURE","DEFAUL_FOTO","BASEURL","APIKEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchSearchMovies","query","fetchMovieDetails","id","fetchMovieCredits","fetchMoviesReviews","MovieDetailsElement","movie","onClick","original_title","poster_path","overview","vote_average","type","Section","src","alt","InfoContainer","genres","map","name","MovieDetailsPage","useState","detailsMovies","setDetailsMovies","movieId","useParams","navigate","useNavigate","useEffect","moviedbAPI","then","to"],"sourceRoot":""}