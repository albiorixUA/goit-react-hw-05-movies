{"version":3,"file":"static/js/133.2ba1ddfc.chunk.js","mappings":"8NAIe,SAASA,EAAT,GAA0B,IAAPC,EAAM,EAANA,GAChC,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA8BL,GAAIM,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBJ,EAAUI,QACjE,CAACP,KAGF,8BACGE,GAAUA,EAAOM,OAAS,GACzB,wBACGN,EAAOO,KAAI,SAAAC,GACV,IAAQV,EAAwBU,EAAxBV,GAAIW,EAAoBD,EAApBC,OAAQC,EAAYF,EAAZE,QACpB,OACE,2BACE,wBAAKD,KACL,uBAAIC,MAFGZ,SAQf","sources":["views/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport * as moviedbAPI from '../services/themoviedb-api';\nimport PropTypes from 'prop-types';\n\nexport default function Reviews({ id }) {\n  const [review, setReview] = useState(null);\n\n  useEffect(() => {\n    moviedbAPI.fetchMoviesReviews(id).then(({ results }) => setReview(results));\n  }, [id]);\n\n  return (\n    <>\n      {review && review.length > 0 ? (\n        <ul>\n          {review.map(el => {\n            const { id, author, content } = el;\n            return (\n              <li key={id}>\n                <h3>{author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n}\nReviews.propTypes = {\n  id: PropTypes.string.isRequired,\n};\n"],"names":["Reviews","id","useState","review","setReview","useEffect","moviedbAPI","then","results","length","map","el","author","content"],"sourceRoot":""}